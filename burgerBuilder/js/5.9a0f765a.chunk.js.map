{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","orderDataOutput","Object","entries","orderData","data","orderDate","Date","toLocaleString","className","classes","Order","onClick","clicked","order_span","Number","parseFloat","price","toFixed","Orders","deleteOrderHandler","orderId","axios","post","token","then","res","onFetchOrders","userId","catch","err","response","this","orders","Spinner","loading","error","length","href","marginTop","totalPrice","createdAt","_id","Component","connect","state","auth","dispatch","actions","withErrorHandler"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,WAAa,8B,yHC8C/CC,EA3CD,SAACC,GACX,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CAACC,KAAMF,EAAgBG,OAAQL,EAAMC,YAAYC,KAGtE,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAGJ,MARL,IAQaI,EAAGJ,KARhB,KAQwBI,EAAGH,OAR3B,QAaLW,EAFaC,OAAOC,QAAQlB,EAAMmB,WAELZ,KAAI,SAAAa,GACnC,OAAO,0BACHX,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRE,QAAS,OAEbC,IAAKK,EAAK,IAPP,IAOaA,EAAK,GAPlB,KAOwBA,EAAK,GAP7B,QAULC,EAAY,IAAIC,KAAKtB,EAAMqB,WAAWE,iBAE5C,OAAQ,yBAAKC,UAAWC,IAAQC,MAAOC,QAAS3B,EAAM4B,SAC9C,+BAAI,0BAAMJ,UAAWC,IAAQI,YAAzB,iBAA0DvB,EAA9D,KACA,+BAAI,0BAAMkB,UAAWC,IAAQI,YAAzB,cAAJ,IAA4DC,OAAOC,WAAW/B,EAAMgC,OAAOC,QAAQ,GAAnG,MACA,+BAAI,0BAAMT,UAAWC,IAAQI,YAAzB,kBAAJ,IAAgEb,GAChE,+BAAI,0BAAMQ,UAAWC,IAAQI,YAAzB,eAAJ,IAA6DR,EAA7D,O,gCClCNa,E,2MAMFC,mBAAqB,SAACC,GAClBC,IAAMC,KAAK,oDAAqD,EAAKtC,MAAMuC,MAAO,CAACH,YAC9EI,MAAK,SAAAC,GACF,EAAKzC,MAAM0C,cAAc,EAAK1C,MAAMuC,MAAO,EAAKvC,MAAM2C,WACzDC,OAAM,SAAAC,GAAG,OAAGA,EAAIC,SAAS1B,S,mFAP9B2B,KAAK/C,MAAM0C,cAAcK,KAAK/C,MAAMuC,MAAOQ,KAAK/C,MAAM2C,U,+BAUhD,IAAD,OAEDK,EAAS,kBAACC,EAAA,EAAD,MA0Bb,OAzBKF,KAAK/C,MAAMkD,UAsBRF,EArBCD,KAAK/C,MAAMmD,MAqBH,uBAAG1C,MAAO,CAACG,OAAQ,SAAnB,IAA8BmC,KAAK/C,MAAMmD,MAAzC,KApBwB,IAA7BJ,KAAK/C,MAAMgD,OAAOI,OACT,uBAAG3C,MAAO,CAACG,OAAQ,SAAnB,kDAA2E,6BAA3E,IAAiF,uBAAGyC,KAAK,KAAR,uBAAjF,KAGL,yBAAK5C,MAAO,CAAC6C,UAAW,SAAxB,IACIP,KAAK/C,MAAMgD,OAAOzC,KAAI,SAACR,GACnB,OAAO,kBAAC,EAAD,CACHE,YAAaF,EAAME,YACnB+B,MAAOjC,EAAMwD,WACbpC,UAAWpB,EAAMoB,UACjBE,UAAWtB,EAAMyD,UACjBzC,IAAKhB,EAAM0D,IACX7B,QAAS,kBAAI,EAAKO,mBAAmBpC,EAAM0D,aAYnE,6BACKT,O,GA3CIU,aAiENC,uBAhBS,SAAAC,GACpB,MAAO,CACHZ,OAAQY,EAAM7D,MAAMiD,OACpBE,QAASU,EAAM7D,MAAMmD,QACrBX,MAAOqB,EAAMC,KAAKtB,MAClBI,OAAQiB,EAAMC,KAAKlB,OACnBQ,MAAOS,EAAMC,KAAKV,UAIC,SAAAW,GACvB,MAAO,CACHpB,cAAe,SAACH,EAAOI,GAAR,OAAmBmB,EAASC,IAAoBxB,EAAOI,QAI/DgB,CAA6CK,YAAiB9B,EAAQG","file":"static/js/5.9a0f765a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order___4yi4Z\",\"order_span\":\"Order__order_span___35gjW\"};","import React from \"react\";\r\nimport classes from './Order.css';\r\n// import {number} from \"prop-types\";\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({name: ingredientName, amount: props.ingredients[ingredientName]})\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: \"inline-block\",\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}> {ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    const ordersData = Object.entries(props.orderData);\r\n\r\n    const orderDataOutput = ordersData.map(data => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: \"inline-block\",\r\n                margin: '0 8px',\r\n                padding: '5px'\r\n            }}\r\n            key={data[0]}> {data[0]}: {data[1]} </span>;\r\n    });\r\n\r\n    const orderDate = new Date(props.orderDate).toLocaleString();\r\n\r\n    return (<div className={classes.Order} onClick={props.clicked}>\r\n            <p> <span className={classes.order_span}>Ingredients: </span>{ingredientOutput} </p>\r\n            <p> <span className={classes.order_span}>Price: USD</span> {Number.parseFloat(props.price).toFixed(2)} $</p>\r\n            <p> <span className={classes.order_span}>Delivery data:</span> {orderDataOutput}</p>\r\n            <p> <span className={classes.order_span}>Order date:</span> {orderDate} </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default order;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    deleteOrderHandler = (orderId) => {\r\n        axios.post('http://localhost:3003/orders/delete?access_token='+ this.props.token, {orderId})\r\n            .then(res=> {\r\n                this.props.onFetchOrders(this.props.token, this.props.userId)})\r\n            .catch(err=> err.response.data)\r\n    };\r\n\r\n    render() {\r\n\r\n        let orders = <Spinner/>;\r\n        if (!this.props.loading) {\r\n            if (!this.props.error) {\r\n                if (this.props.orders.length === 0) {\r\n                    orders = <p style={{margin: '80px'}}> No orders created yet. Make your first one ;) <br/> <a href='/'> Back to main page </a> </p>\r\n                } else {\r\n                    orders = (\r\n                        <div style={{marginTop: '80px'}}> {\r\n                            this.props.orders.map((order) => {\r\n                                return <Order\r\n                                    ingredients={order.ingredients}\r\n                                    price={order.totalPrice}\r\n                                    orderData={order.orderData}\r\n                                    orderDate={order.createdAt}\r\n                                    key={order._id}\r\n                                    clicked={()=>this.deleteOrderHandler(order._id)}\r\n                                />\r\n                            })\r\n                        }\r\n                        </div>\r\n                    )\r\n                }\r\n            } else {\r\n                orders = <p style={{margin: '80px'}}> {this.props.error} </p>\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        error: state.auth.error\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}