{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Auxiliary/Auxiliary.js","store/actions/burgerBuilder.js","store/actions/mainPage.js","store/actions/order.js","store/actions/index.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.css","components/UI/Form/Input/Input.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Navigation/SideDrawer/SideDrawer.css","components/MainPage/MainPage.css","store/actions/auth.js","components/UI/Button/Button.js","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.css","components/Burger/Burger.css","components/Burger/BurgerInfo/BurgerInfo.css","components/Burger/BuildControls/BuildControls.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/UI/Button/Button.css","components/UI/Form/Input/Input.js","hoc/Layout/Layout.css","assets/images/27.1 burger-logo.png.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","containers/Checkout/ContactData/ContactData.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerInfo/BurgerInfo.js","components/MainPage/MainPage.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Checkout/ContactData/ContactData.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","store/reducers/mainPage.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS_AND_PRICE","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAILED","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAILED","AUTH_START","AUTH_SUCCESS","AUTH_FAILED","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","SET_MAIN_BURGERS","FETCH_MAIN_BURGERS","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isPassword","isNumeric","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","setIngredientsAndPrice","ingredients","totalPrice","initIngredients","dispatch","axios","get","then","response","data","catch","err","initBurgers","burgerDB","purchaseBurger","orderSummary","token","post","id","orderData","orderId","error","purchaseBurgerFail","purchaseInit","fetchOrders","userId","res","orders","fetchedOrders","key","push","instance","create","baseURL","module","exports","spinner","className","classes","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","this","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","show","modalClosed","message","Component","authSuccess","userEmail","idToken","logout","localStorage","removeItem","auth","email","password","isSignUp","authData","url","setItem","LocalId","setAuthRedirectPath","path","authCheckState","getItem","button","disabled","Button","btnType","join","onClick","clicked","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","React","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","burger_text","style","class","BurgerPreview","Burger","backdrop","Backdrop","Modal","nextProps","nextState","nextContext","transform","opacity","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","onChange","changed","options","option","displayValue","Input","Label","label","logo","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","Content","connect","burgerInfo","burgersDB","infoName","infoPrice","infoIngredients","MainPage","purchaseContinueHandler","onSetIngredientsAndPrice","onInitPurchase","history","onInitBurgers","createBurger","createBurgerDiv","createBurgerButton","burgersArr","Spinner","burgerFromDB","index","burgerItem","orderButton","burgersList","mainPage","actions","buildControl","BuildControl","Less","removed","More","added","controls","buildControls","BuildControls","BuildControls_price","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","purchaseCancelHandler","onInitIngredients","sum","disabledInfo","ings","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","ingName","ContactData","orderForm","placeholder","validation","valid","address","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementArray","config","form","onSubmit","formElement","loading","purchased","href","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFailed","reducer","authRedirectPath","authStart","authFailed","authLogout","setBurgers","fetchBurgersFailed","mainPageBurgers","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cedd495a.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS_AND_PRICE = 'SET_INGREDIENTS_AND_PRICE';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAILED = 'PURCHASE_BURGER_FAILED';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAILED = 'FETCH_ORDERS_FAILED';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAILED = 'AUTH_FAILED';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n\r\nexport const SET_MAIN_BURGERS = 'SET_MAIN_BURGERS';\r\nexport const FETCH_MAIN_BURGERS = 'FETCH_MAIN_BURGERS';","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isPassword) {\r\n        const pattern =/^(?=.*\\d)(?=.*[a-zA-Z])(?!.*\\s).{5,15}$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import * as actionTypes from './actionTypes';\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredientsAndPrice = (ingredients, totalPrice) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS_AND_PRICE,\r\n        ingredients: ingredients,\r\n        totalPrice: totalPrice\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('http://localhost:3003/ingredients')\r\n            .then(response => {\r\n                dispatch(setIngredientsAndPrice(response.data.ingredients, response.data.totalPrice))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchIngredientsFailed(err.response.data))\r\n            })\r\n    };\r\n};","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const setBurgers = (burgerDB) => {\r\n    return {\r\n        type: actionTypes.SET_MAIN_BURGERS,\r\n        burgerDB: burgerDB,\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_MAIN_BURGERS\r\n    }\r\n};\r\n\r\nexport const initBurgers = () => {\r\n    return dispatch => {\r\n        axios.get('http://localhost:3003/burgers')\r\n            .then(response => {\r\n                dispatch(setBurgers(response.data))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchIngredientsFailed())\r\n            })\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderSummary, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('http://localhost:3003/orders', {token, orderSummary})\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderSummary))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error))\r\n            })\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n};\r\nexport const fetchOrdersFailed = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAILED,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('http://localhost:3003/orders?access_token='+ token)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFailed(err))\r\n            })\r\n    }\r\n};\r\n","export {\r\n    addIngredient,\r\n    removeIngredient,\r\n    initIngredients,\r\n    setIngredientsAndPrice\r\n} from './burgerBuilder';\r\n\r\nexport { initBurgers } from './mainPage'\r\n\r\nexport {\r\n    purchaseBurger,\r\n    purchaseInit,\r\n    fetchOrders\r\n} from './order';\r\n\r\nexport {\r\n    auth,\r\n    logout,\r\n    setAuthRedirectPath,\r\n    authCheckState\r\n} from './auth';","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-3cb3b.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom___HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop___10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1___3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2___1cUso\",\"Meat\":\"BurgerIngredient__Meat___13nAN\",\"Cheese\":\"BurgerIngredient__Cheese___1FxeY\",\"Salad\":\"BurgerIngredient__Salad___1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon___3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input___2bTxP\",\"Label\":\"Input__Label___1zzNW\",\"InputElement\":\"Input__InputElement___nCekK\",\"Invalid\":\"Input__Invalid___21pd6\"};","import React from \"react\";\r\nimport classes from './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, {Component} from \"react\";\r\n\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        };\r\n\r\n        UNSAFE_componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error:null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(\r\n                res => res, error => {\r\n                this.setState({error:error})\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.request.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error:null})\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                    >\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props}/>\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default withErrorHandler;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer___21TuB\",\"Open\":\"SideDrawer__Open___1pVYR\",\"Close\":\"SideDrawer__Close___3Yv1l\",\"Logo\":\"SideDrawer__Logo___3TkPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgersList\":\"MainPage__burgersList___21tHF\",\"burgerItem\":\"MainPage__burgerItem___zs5pU\",\"createBurgerDiv\":\"MainPage__createBurgerDiv___3X1u1\",\"orderButton\":\"MainPage__orderButton___5XE0T\",\"enable\":\"MainPage__enable___mlRTz\",\"createBurgerButton\":\"MainPage__createBurgerButton___1ycJV\"};","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId, userEmail) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId,\r\n        userEmail: userEmail\r\n    };\r\n};\r\n\r\nexport const authFailed = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('userEmail');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password\r\n        };\r\n        let url = 'http://localhost:3003/auth';\r\n        if (!isSignUp) {\r\n            url = 'http://localhost:3003/login'\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('userId', response.data.LocalId);\r\n                localStorage.setItem('userEmail', response.data.userEmail);\r\n                dispatch(authSuccess(response.data.idToken, response.data.LocalId, response.data.userEmail));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFailed(err.response.data));\r\n            })\r\n    }\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n          const userId = localStorage.getItem('userId');\r\n          const userEmail = localStorage.getItem('userEmail');\r\n          dispatch(authSuccess(token,userId,userEmail));\r\n      } else {\r\n              dispatch(logout())\r\n      }\r\n  }\r\n};","import React from \"react\";\r\nimport classes from './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl___1jYc3\",\"Label\":\"BuildControl__Label___33Z-p\",\"Less\":\"BuildControl__Less___377MJ\",\"More\":\"BuildControl__More___28-hQ\"};","import React from \"react\";\r\nimport classes from './BurgerIngredient.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends React.Component {\r\n    render() {\r\n            let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case('bread-bottom') :\r\n                ingredient = <div className={classes.BreadBottom}></div>\r\n                break;\r\n            case('bread-top') :\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case('meat') :\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            case('cheese') :\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            case('salad') :\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            case ('bacon') :\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            default :\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    };\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from \"react\";\r\n\r\nimport classes from './Burger.css'\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n    if (transformedIngredients.length===0) {\r\n        transformedIngredients = <p className={classes.burger_text}>Please start adding ingredients</p>\r\n    }\r\n    let style = '';\r\n    if (!props.class) {\r\n        style = classes.Burger;\r\n    } else {\r\n        style = classes.BurgerPreview;\r\n    }\r\n  return (\r\n      <div className={style}>\r\n        <BurgerIngredient type=\"bread-top\"/>\r\n        {transformedIngredients}\r\n        <BurgerIngredient type=\"bread-bottom\"/>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default burger;","import React from \"react\";\r\nimport classes from './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ?\r\n        <div\r\n        className={classes.Backdrop}\r\n        onClick={props.clicked}>\r\n\r\n    </div> : null\r\n);\r\n\r\nexport default backdrop;","import React, {Component} from \"react\";\r\nimport classes from './Modal.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps,\r\n                          nextState,\r\n                          nextContext) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop\r\n                    show={this.props.show}\r\n                    clicked={this.props.modalClosed}/>\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : \"0\",\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar___2JJW-\",\"Logo\":\"Toolbar__Logo___1efBD\",\"DesktopOnly\":\"Toolbar__DesktopOnly___WADUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger___3K4F-\",\"BurgerPreview\":\"Burger__BurgerPreview___2KRvR\",\"burger_text\":\"Burger__burger_text___2jAwl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoName\":\"BurgerInfo__infoName___2SJ34\",\"infoPrice\":\"BurgerInfo__infoPrice___1CZDd\",\"infoIngredients\":\"BurgerInfo__infoIngredients___3opNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls___3_01f\",\"BuildControls_price\":\"BuildControls__BuildControls_price___2D8Jj\",\"OrderButton\":\"BuildControls__OrderButton___myBwT\",\"enable\":\"BuildControls__enable___3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem___23bcu\",\"active\":\"NavigationItem__active___2zJdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button___QI7b2\",\"Success\":\"Button__Success___2dHUt\",\"Danger\":\"Button__Danger___2xnhN\"};","import React from \"react\";\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={classes.InputElement}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={classes.InputElement}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option\r\n                            key={option.value}\r\n                            value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={classes.InputElement}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}> {props.label} </label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default input;\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content___3pLYC\"};","module.exports = __webpack_public_path__ + \"static/media/27.1 burger-logo.png.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo___19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems____yd_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle___26to0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop___efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal___32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader___1DDwY\",\"load2\":\"Spinner__load2___1N7mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData___1J81r\"};","import React from \"react\";\r\nimport burgerLogo from '../../assets/images/27.1 burger-logo.png.png';\r\nimport classes from './Logo.css'\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt='My burger'/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from \"react\";\r\nimport  {NavLink} from \"react-router-dom\";\r\nimport classes from './NavigationItem.css';\r\n\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}\r\n        >{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from \"react\";\r\nimport  classes from './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link='/' exact> Main page </NavigationItem>\r\n        <NavigationItem link='/burgerBuilder' exact> Burger Builder </NavigationItem>\r\n        {props.isAuthenticated\r\n            ? <NavigationItem link='/orders'> Orders </NavigationItem>\r\n            : null }\r\n        {!props.isAuthenticated\r\n            ? <NavigationItem link='/auth'> Authenticate </NavigationItem>\r\n            : <NavigationItem link='/logout'> Logout </NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from \"react\";\r\nimport classes from './DrawerToggle.css';\r\n\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from \"react\";\r\nimport classes from './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from  '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked = {props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n             <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated = {props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from \"react\";\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n        <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n            <div className={classes.Logo}>\r\n                <Logo/>\r\n            </div>\r\n            <nav>\r\n                <NavigationItems isAuthenticated = {props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    };\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false})\r\n    };\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer}\r\n        })\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar\r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked ={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    closed={this.sideDrawerClosedHandler}\r\n                    open = {this.state.showSideDrawer}\r\n                />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated : state.auth.token != null\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n\r\n","import React from \"react\";\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport classes from './BurgerInfo.css';\r\n\r\n\r\nconst burgerInfo = (props) => {\r\n    let ingredients = '';\r\n    for (let keys in props.burgersDB.ingredients) {\r\n        let newIngredient = keys + ':  ' +  props.burgersDB.ingredients[keys] + '\\n';\r\n        ingredients += newIngredient;\r\n    };\r\n\r\n    return (\r\n        <Aux>\r\n            <p className={classes.infoName}> {props.burgersDB.name} </p>\r\n            <p className={classes.infoPrice}> Price: {props.burgersDB.totalPrice} $</p>\r\n            <p className={classes.infoIngredients}> Ingredients: {ingredients} </p>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default burgerInfo;","import React, {Component} from \"react\";\r\nimport axios from '../../axios-orders';\r\nimport {connect} from 'react-redux';\r\n\r\nimport classes from './MainPage.css';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary'\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BurgerInfo from \"../Burger/BurgerInfo/BurgerInfo\";\r\nimport * as actions from \"../../store/actions\";\r\n// import Modal from '../../components/UI/Modal/Modal';\r\n// import OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\n// import Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\n// import * as actions from '../../store/actions/index';\r\n\r\nclass MainPage extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onInitBurgers();\r\n    }\r\n\r\n    purchaseContinueHandler = (key) => {\r\n        if (this.props.isAuthenticated) {\r\n            this.props.onSetIngredientsAndPrice(this.props.burgersDB[key].ingredients, this.props.burgersDB[key].totalPrice);\r\n            this.props.onInitPurchase();\r\n            this.props.history.push('/checkout')\r\n        } else {\r\n            this.props.history.push('/auth')\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let createBurger = (\r\n            <div className={classes.createBurgerDiv}>\r\n            <button onClick={()=>this.props.history.push('/burgerBuilder')} className={classes.createBurgerButton}> CREATE your own BURGER </button>\r\n        <p> or choose now </p>\r\n            </div>\r\n        );\r\n\r\n\r\n        let burgersArr = [];\r\n        let burger = !this.props.burgersDB ? <p>Ingredients can't be loaded</p> : <Spinner/>;\r\n\r\n        if (this.props.burgersDB) {\r\n            this.props.burgersDB.map((burgerFromDB, index) => {\r\n\r\n                if (burgerFromDB.name === 'base') {\r\n                    burger = null;\r\n                } else {\r\n                    burger = (\r\n                            <div key={burgerFromDB.name} className={classes.burgerItem}>\r\n                                <Burger class={\"preview\"} ingredients={burgerFromDB.ingredients}/>\r\n                                <BurgerInfo burgersDB={burgerFromDB}/>\r\n                                <button\r\n                                    className={classes.orderButton}\r\n                                    onClick={()=>this.purchaseContinueHandler(index)}\r\n                                >{ this.props.isAuthenticated ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n                            </div>\r\n                    )\r\n                }\r\n                burgersArr.push(burger);\r\n            return burgersArr\r\n            })\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {createBurger}\r\n                <div className={classes.burgersList}>\r\n                {burgersArr}\r\n                </div>\r\n            </Aux>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        burgersDB: state.mainPage.burgerDB,\r\n        // error: state.mainPage.error,\r\n        isAuthenticated: state.auth.token != null,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitBurgers: () => dispatch(actions.initBurgers()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetIngredientsAndPrice: (ingredients, totalPrice) =>dispatch(actions.setIngredientsAndPrice(ingredients, totalPrice))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(MainPage, axios));\r\n","import React from \"react\";\r\n\r\nimport classes from './BuildControl.css'\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}> {props.label} </div>\r\n        <button className={classes.Less}\r\n                onClick={props.removed}\r\n                disabled={props.disabled}\r\n        > Less\r\n        </button>\r\n        <button className={classes.More}\r\n                onClick={props.added}\r\n        > More\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from \"react\";\r\nimport classes from './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p className={classes.BuildControls_price}>Current Price: <strong>{props.price.toFixed(2) + ' $'}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl\r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                added={()=>props.ingredientAdded(ctrl.type)}\r\n                removed={()=>props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}\r\n        />))}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;\r\n","import React, {Component} from \"react\";\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map(igKey => {\r\n                return (\r\n                    <li key={igKey}>\r\n                        <span style={{textTransform: 'capitalize'}}>{igKey}</span> : {this.props.ingredients[igKey]}\r\n                    </li>);\r\n            });\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p>Total price: {this.props.price.toFixed(2) + ' $'}</p>\r\n                <p>Continue to checkout?</p>\r\n                <Button\r\n                    btnType='Danger'\r\n                    clicked={this.props.purchaseCancelled}> CANCEL </Button>\r\n                <Button\r\n                    btnType='Success'\r\n                    clicked={this.props.purchaseContinued}> CONTINUE </Button>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import React, {Component} from \"react\";\r\nimport axios from '../../axios-orders';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary'\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0\r\n    };\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({purchasing: true})\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth')\r\n        }\r\n    };\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    };\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout')\r\n    };\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner/>;\r\n\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        price={this.props.price}\r\n                        />\r\n                </Aux>\r\n            );\r\n\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.price}/>;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal\r\n                    show={this.state.purchasing}\r\n                    modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token != null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React, {Component} from \"react\";\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spiner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Form/Input/Input';\r\nimport {connect} from \"react-redux\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from '../../../store/actions/index';\r\nimport {checkValidity} from \"../../../shared/utility\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n// import { updateObject} from '../../../shared/utility';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            address: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'E-mail'\r\n                },\r\n                value: this.props.userEmail,\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: true,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    };\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            totalPrice: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        };\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n    };\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        /*     Some optimization with updateObject utility\r\n          inputChangedHandler = (event, inputIdentifier) => {\r\n                    const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\r\n                        value: event.target.value,\r\n                        valid: this.checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\r\n                        touched: true\r\n                    });\r\n\r\n                    const updatedOrderForm = updateObject(this.state.orderForm, {\r\n                        [inputIdentifier] : updatedFormElement\r\n                    });*/\r\n\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid})\r\n    };\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = <Redirect to=\"/\"/>;\r\n\r\n        if (this.props.ings) {\r\n            form = (\r\n                <div>\r\n                    <h4> Enter your Contact Data </h4>\r\n                    <form onSubmit={this.orderHandler}>\r\n                        {formElementArray.map(formElement => (\r\n                                <Input\r\n                                    key={formElement.id}\r\n                                    elementType={formElement.config.elementType}\r\n                                    elementConfig={formElement.config.elementConfig}\r\n                                    value={formElement.config.value}\r\n                                    invalid={!formElement.config.valid}\r\n                                    shouldValidate={formElement.config.validation}\r\n                                    touched={formElement.config.touched}\r\n                                    changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n                            )\r\n                        )}\r\n                        <Button\r\n                            btnType='Success'\r\n                            disabled={!this.state.formIsValid}\r\n                        > ORDER </Button>\r\n                    </form>\r\n                </div>);\r\n        }\r\n\r\n        if (this.props.loading) {\r\n            form = <Spiner/>\r\n        }\r\n\r\n        if (this.props.purchased) {\r\n            form = (\r\n                <div>\r\n                    <p> THANKS FOR YOUR ORDER ! </p>\r\n                    <p> Our manager make you phone call for order confirmation </p>\r\n                    <a href='/'> Return to main page </a> or\r\n                    <a href='/orders'> Check our orders </a>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        userEmail: state.auth.userEmail,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\r\n\r\n","import React, {Component} from \"react\";\r\nimport  { Redirect } from  'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to='/'/>\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, {Component} from \"react\";\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        };\r\n\r\n        componentDidMount() {\r\n            importComponent().then(cmp => {\r\n                this.setState({component: cmp.default});\r\n            });\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n\r\n            return C ? <C {...this.props}/> : null;\r\n        }\r\n    }\r\n};\r\n\r\nexport default asyncComponent;\r\n\r\n","import React from 'react';\nimport {Route, Switch, Redirect } from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport MainPage from \"./components/MainPage/MainPage\";\nimport BurgerBuilder from '../src/containers/BurgerBuilder/BurgerBuilder';\n// import Checkout from \"./containers/Checkout/Checkout\";\n// import Orders from \"./containers/Orders/Orders\";\n// import Auth from \"./containers/Auth/Auth\";\nimport ContactData from \"./containers/Checkout/ContactData/ContactData\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/index';\nimport asyncComponent from \"./hoc/asyncComponent/asyncComponent\";\n\nconst asyncCheckout = asyncComponent(() => {\n    return import('./containers/Checkout/Checkout');\n});\n\nconst asyncOrders = asyncComponent(() => {\n    return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(() => {\n    return import('./containers/Auth/Auth');\n});\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.onTryAutoSignup();\n    }\n\n    render() {\n        let routes = (\n            <Switch>\n                <Route path='/auth' component={asyncAuth}/>\n                <Route path='/burgerBuilder' component={BurgerBuilder}/>\n                <Route path='/' component={MainPage}/>\n                <Redirect to='/'/>\n            </Switch>\n        );\n\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>\n                    <Route path='/checkout/contact-data' component={ContactData}/>\n                    <Route path='/checkout' component={asyncCheckout}/>\n                    <Route path='/orders' component={asyncOrders}/>\n                    <Route path='/logout' component={Logout}/>\n                    <Route path='/auth' component={asyncAuth}/>\n                    <Route path='/burgerBuilder' component={BurgerBuilder}/>\n                    <Route path='/' component={MainPage}/>\n                    <Redirect to='/'/>\n                </Switch>\n            );\n        }\n\n        return (\n            <div>\n                <Layout>\n                    {routes}\n                </Layout>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: null,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7,\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1};\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    };\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1};\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    };\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat,\r\n        },\r\n        totalPrice: action.totalPrice,\r\n        error: false,\r\n        building: false\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, {error: true});\r\n};\r\n\r\nconst burgerBuilder = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient (state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS_AND_PRICE: return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state,action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default burgerBuilder;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = {\r\n        ...action.orderData,\r\n        id: action.orderId,\r\n    };\r\n    return updateObject(state, {\r\n        loading: false,\r\n        orders: state.orders.concat(newOrder),\r\n        purchased: true\r\n    });\r\n};\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false});\r\n};\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {purchased: false});\r\n};\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    });\r\n};\r\nconst fetchOrdersFailed= (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAILED: return purchaseBurgerFail(state,action);\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n        case actionTypes.FETCH_ORDERS_FAILED: return fetchOrdersFailed(state, action);\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    userEmail:null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true});\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        userEmail: action.userEmail,\r\n        error: null,\r\n        loading: false\r\n    })\r\n};\r\n\r\nconst authFailed = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    })\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n  return updateObject(state, {token: null, userId: null})\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path})\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action);\r\n        case  actionTypes.AUTH_FAILED:\r\n            return authFailed(state, action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return setAuthRedirectPath(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import {updateObject} from \"../../shared/utility\";\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {};\r\n\r\n\r\nconst setBurgers = (state, action) => {\r\n    return updateObject(state, {\r\n        burgerDB: action.burgerDB\r\n    })\r\n};\r\n\r\nconst fetchBurgersFailed = (state, action) => {\r\n    return updateObject(state, {error: true});\r\n};\r\n\r\nconst mainPageBurgers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_MAIN_BURGERS:\r\n            return setBurgers(state, action);\r\n        case actionTypes.FETCH_MAIN_BURGERS:\r\n            return fetchBurgersFailed(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mainPageBurgers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, compose, combineReducers} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\nimport mainPage from './store/reducers/mainPage';\r\n\r\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder: burgerBuilderReducer,\r\n    order: orderReducer,\r\n    auth: authReducer,\r\n    mainPage: mainPage\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}